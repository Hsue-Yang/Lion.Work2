@{ Layout = "~/Views/_Layout.cshtml"; }
@using LionTech.Entity
@using LionTech.Entity.ERP
@using LionTech.Utility
@using LionTech.Web.ERPHelper
@using Resources
@model ERPAP.Models.Sys.SystemFunMenuDetailModel

@{
    string fullDateTimeNumber = Common.GetDateTimeString();
}

<script src="@Common.GetEnumDesc(EnumSystemID.ERPAP)/Scripts/Sys/SystemFunMenuDetail.js?@(fullDateTimeNumber)" type="text/javascript"></script>

<div class="page-title"><h3>@SysSystemFunMenuDetail.TabText_SystemFunMenuDetail</h3></div>
@using (Html.BeginFormSubmit("SystemFunMenuDetailForm"))
{
    bool readOnlyAttribute = Model.ExecAction == EnumActionType.Update || Model.ExecAction == EnumActionType.Delete;

    <table class="tblvertical">
        <tr>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_SysID, IsRequired: true)
            </th>
            <td>
                <span style="display: none">
                    @Html.InputComboBoxFor(model => model.SysID, Model.GetDictionaryFormSelectItem(Model.UserSystemByIdList, false), isDisabled: false, TitleName: SysSystemFunMenuDetail.Label_SysID)
                </span>
                <span style="display: block">
                    @Html.InputTextBox("SysIDReadOnlyText", string.Empty, ReadOnly: true, Size: 30)
                </span>
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenu, IsRequired: true)
            </th>
            <td colspan="3">
                @Html.InputTextBoxFor(model => model.FunMenu, ReadOnly: readOnlyAttribute, Size: 30, TitleName: SysSystemFunMenuDetail.Label_FunMenu)
            </td>
        </tr>
        <tr>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMZHTW, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMZHTW, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMZHTW)
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMZHCN, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMZHCN, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMZHCN)
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMENUS, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMENUS, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMENUS)
            </td>
        </tr>
        <tr>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMTHTH, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMTHTH, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMTHTH)
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMJAJP, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMJAJP, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMJAJP)
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_FunMenuNMKOKR, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.FunMenuNMKOKR, false, 30, TitleName: SysSystemFunMenuDetail.Label_FunMenuNMKOKR)
            </td>
        </tr>
        <tr>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_DefaultMenuID, IsRequired: true)
            </th>
            <td>
                @Html.InputComboBoxFor(model => model.DefaultMenuID, Model.DefaultMenuIDDictionary)
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_IsDisable, IsRequired: true)
            </th>
            <td>
                @Html.InputCheckBox("IsDisable", SysSystemFunMenuDetail.Label_IsDisable, EnumYN.Y.ToString(), Model.IsDisable == EnumYN.Y.ToString())
            </td>
            <th>
                @Html.FormLabel(SysSystemFunMenuDetail.Label_SortOrder, IsRequired: true)
            </th>
            <td>
                @Html.InputTextBoxFor(model => model.SortOrder, false, 30, TitleName: SysSystemFunMenuDetail.Label_SortOrder)
            </td>
        </tr>
    </table>

    <div>
        @if (Model.ExecAction == EnumActionType.Add)
        {
            @Html.ButtonClient("AddButton", Resource.Button_Add, className: "btn")
        }
        @if (Model.ExecAction == EnumActionType.Update || Model.ExecAction == EnumActionType.Delete)
        {
            @Html.ButtonClient("UpdateButton", Resource.Button_Update, className: "btn")
            <span></span>
            @Html.ButtonClient("DeleteButton", Resource.Button_Delete, className: "btn")
        }
        @Html.ButtonClient("CancelButton", Resource.Button_Cancel, className: "btn")
    </div>

    using (Html.BeginConfirmDialog("dialog_Confirm", Resource.SysMsg_Title, Resource.SysMsg_DeleteConfirm))
    {
        @Html.ButtonClient("ConfirmOKButton", Resource.Button_Delete)
        @Html.ButtonClient("ConfirmNOButton", Resource.Button_Cancel)
    }
}