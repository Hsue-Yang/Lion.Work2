<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeleteSystemWorkFlowNodeDetailResult_ChildExist" xml:space="preserve">
    <value>Node can not be deleted. Because it still has next node, signature and document record.</value>
  </data>
  <data name="DeleteSystemWorkFlowNodeDetailResult_Failure" xml:space="preserve">
    <value>Delete work flow node is failure</value>
  </data>
  <data name="DeleteSystemWorkFlowNodeDetailResult_RuntimeExist" xml:space="preserve">
    <value>Node can not be deleted. Because it has been used in the flow</value>
  </data>
  <data name="DeleteSystemWorkFlowNodeDetailResult_Success" xml:space="preserve">
    <value>Delete work flow node is success</value>
  </data>
  <data name="EditSystemWorkFlowNodeDetailResult_Failure" xml:space="preserve">
    <value>Edit work flow node is success</value>
  </data>
  <data name="JsMsg_GetSysSystemAPIFunList" xml:space="preserve">
    <value>Get System API function List Failure</value>
  </data>
  <data name="JsMsg_GetSysSystemAPIGroupList" xml:space="preserve">
    <value>Get System API group List Failure</value>
  </data>
  <data name="JsMsg_GetSystemFunControllerIDList" xml:space="preserve">
    <value>Get System function group List Failure</value>
  </data>
  <data name="JsMsg_GetSystemFunNameList" xml:space="preserve">
    <value>Get System function List Failure</value>
  </data>
  <data name="JsMsg_SystemFunctionIsEmpty" xml:space="preserve">
    <value>Those following fields are required when node type in Process or Decision&lt;br /&gt;Functional System AP&lt;br /&gt;Function Group&lt;br /&gt;Function</value>
  </data>
  <data name="JsMsg_SystemRoleIsEmpty" xml:space="preserve">
    <value>Please select the System Role</value>
  </data>
  <data name="Label_BackWFNode" xml:space="preserve">
    <value>Back Node</value>
  </data>
  <data name="Label_FunActionName" xml:space="preserve">
    <value>Function</value>
  </data>
  <data name="Label_FunControllerID" xml:space="preserve">
    <value>Function Group</value>
  </data>
  <data name="Label_FunSysID" xml:space="preserve">
    <value>Function System AP</value>
  </data>
  <data name="Label_IsFinally" xml:space="preserve">
    <value>Finally Node</value>
  </data>
  <data name="Label_IsFirst" xml:space="preserve">
    <value>First Node</value>
  </data>
  <data name="Label_NodeSeqX" xml:space="preserve">
    <value>Node Position X</value>
  </data>
  <data name="Label_NodeSeqY" xml:space="preserve">
    <value>Node Position Y</value>
  </data>
  <data name="Label_NodeType" xml:space="preserve">
    <value>Node Type</value>
  </data>
  <data name="Label_Remark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="Label_SortOrder" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="Label_SysID" xml:space="preserve">
    <value>System AP</value>
  </data>
  <data name="Label_SystemRole" xml:space="preserve">
    <value>System Role</value>
  </data>
  <data name="Label_WFFlowNodeENUS" xml:space="preserve">
    <value>Node Name(US)</value>
  </data>
  <data name="Label_WFFlowNodeJAJP" xml:space="preserve">
    <value>Node Name(JP)</value>
  </data>
  <data name="Label_WFFlowNodeTHTH" xml:space="preserve">
    <value>Node Name(TH)</value>
  </data>
  <data name="Label_WFFlowNodeZHCN" xml:space="preserve">
    <value>Node Name(CN)</value>
  </data>
  <data name="Label_WFFlowNodeZHTW" xml:space="preserve">
    <value>Node Name(TW)</value>
  </data>
  <data name="Label_WFNodeID" xml:space="preserve">
    <value>Node ID</value>
  </data>
  <data name="Label_WorkFlowID" xml:space="preserve">
    <value>Flow</value>
  </data>
  <data name="Label_WorkFlowVer" xml:space="preserve">
    <value>Flow Version</value>
  </data>
  <data name="SystemMsg_EditSystemWorkFlowNodeDetailResult_Failure" xml:space="preserve">
    <value>Verify Node Information Failure</value>
  </data>
  <data name="SystemMsg_EditSystemWorkFlowNodeDetailResult_NodeIDRepeat" xml:space="preserve">
    <value>Node ID Repeat</value>
  </data>
  <data name="SystemMsg_EditSystemWorkFlowNodeDetailResult_NodeSeqRepeat" xml:space="preserve">
    <value>Node Position Repeat</value>
  </data>
  <data name="SystemMsg_GetBackWorkFlowNodeIDList" xml:space="preserve">
    <value>Get Back Node List Failure</value>
  </data>
  <data name="SystemMsg_GetSysSystemAPIFuntionList" xml:space="preserve">
    <value>Get System API function List Failure</value>
  </data>
  <data name="SystemMsg_GetSysSystemAPIGroupList" xml:space="preserve">
    <value>Get System API group List Failure</value>
  </data>
  <data name="SystemMsg_GetSysSystemFunControllerIDList" xml:space="preserve">
    <value>Get System function group List Failure</value>
  </data>
  <data name="SystemMsg_GetSysSystemFunNameList" xml:space="preserve">
    <value>Get System function List Failure</value>
  </data>
  <data name="SystemMsg_GetSysSystemRoleIDList" xml:space="preserve">
    <value>Get System Role List Failure</value>
  </data>
  <data name="SystemMsg_GetSystemSysIDList" xml:space="preserve">
    <value>Get System AP List Failure</value>
  </data>
  <data name="SystemMsg_GetSystemWorkFlowNodeDetail" xml:space="preserve">
    <value>Get Node Information Failure</value>
  </data>
  <data name="SystemMsg_GetSysUserSystemWorkFlowIDList" xml:space="preserve">
    <value>Get Flow Information Failure</value>
  </data>
  <data name="SystemMsg_GetWorkFlowNodeTypeList" xml:space="preserve">
    <value>Get Node Type List Failure</value>
  </data>
  <data name="TabText_SystemWorkFlowNodeDetail" xml:space="preserve">
    <value>Work Flow Node Detail</value>
  </data>
  <data name="SystemMsg_GetSystemWFFlow" xml:space="preserve">
    <value>Get Flow Information Failure</value>
  </data>
  <data name="SystemMsg_EditSystemWorkFlowNodeDetailResult_NodeTypeERepeat" xml:space="preserve">
    <value>End Node Type Repeat</value>
  </data>
  <data name="SystemMsg_EditSystemWorkFlowNodeDetailResult_NodeTypeSRepeat" xml:space="preserve">
    <value>Start Node Type Repeat</value>
  </data>
  <data name="Label_SystemRoleMemo" xml:space="preserve">
    <value>SystemRoleMemo</value>
  </data>
  <data name="Label_APIMemo" xml:space="preserve">
    <value>＊API Para：?ClientSysID=&amp;APIPara={"WFNo":"","NodeNo":"","UserID":"","SysID":"","FlowID":"","FlowVer":"","NodeID":""}</value>
  </data>
  <data name="Label_AssgAPI" xml:space="preserve">
    <value>Assign Next Node User API</value>
  </data>
  <data name="Label_AssgAPIMemo" xml:space="preserve">
    <value>＊API Para：?ClientSysID=&amp;APIPara={"WFNo":"","NodeNo":"","SysID":"","FlowID":"","FlowVer":"","NodeID":""}&lt;br /&gt;
　Return：{"NewUserIDList":[""]}</value>
  </data>
  <data name="Label_AssgMemo" xml:space="preserve">
    <value>＊Provide API if the next node user need to assign by API</value>
  </data>
  <data name="Label_IsAssgNextNode" xml:space="preserve">
    <value>Must Assign Next Node User</value>
  </data>
  <data name="SystemMsg_GetSysUserSystemSysIDList" xml:space="preserve">
    <value>Get User System AP List Failure</value>
  </data>
  <data name="JsMsg_SystemAssgAPIFunctionIsEmpty" xml:space="preserve">
    <value>AssgAPI Function Is Empty</value>
  </data>
  <data name="Label_WFFlowNodeKOKR" xml:space="preserve">
    <value>Node Name(KR)</value>
  </data>
</root>