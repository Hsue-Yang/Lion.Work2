<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="JsMsg_ChooseData" xml:space="preserve">
    <value>Choose Data</value>
  </data>
  <data name="Label_AppFunID" xml:space="preserve">
    <value>App Fun ID</value>
  </data>
  <data name="Label_AppFunTypeLeaveApply" xml:space="preserve">
    <value>App FunType LeaveApply</value>
  </data>
  <data name="Label_AppFunTypeLeaveSupplement" xml:space="preserve">
    <value>AppFunTypeLeaveSupplement</value>
  </data>
  <data name="Label_AppFunTypeMeeting" xml:space="preserve">
    <value>AppFunType Meeting</value>
  </data>
  <data name="Label_AppFunTypeMessage" xml:space="preserve">
    <value>AppFunType Message</value>
  </data>
  <data name="Label_AppFunTypeOther" xml:space="preserve">
    <value>AppFunType Other</value>
  </data>
  <data name="Label_Body" xml:space="preserve">
    <value>Body%</value>
  </data>
  <data name="Label_CancelPushMsg" xml:space="preserve">
    <value>Cancel PushMsg</value>
  </data>
  <data name="Label_EndPushDT" xml:space="preserve">
    <value>End PushDT</value>
  </data>
  <data name="Label_IncludeUnSent" xml:space="preserve">
    <value>Is UnSent</value>
  </data>
  <data name="Label_PushNotification" xml:space="preserve">
    <value>Push Notification</value>
  </data>
  <data name="Label_PushStatus" xml:space="preserve">
    <value>Push Status</value>
  </data>
  <data name="Label_StartPushDT" xml:space="preserve">
    <value>Start PushDT</value>
  </data>
  <data name="Label_Title" xml:space="preserve">
    <value>Title%</value>
  </data>
  <data name="Label_UserID" xml:space="preserve">
    <value>UserID</value>
  </data>
  <data name="Lable_CancelStatues" xml:space="preserve">
    <value>Cancel Statues</value>
  </data>
  <data name="Lable_ErrorStatues" xml:space="preserve">
    <value>Error Statues</value>
  </data>
  <data name="Lable_NotSendStatues" xml:space="preserve">
    <value>Not Send Statues</value>
  </data>
  <data name="Lable_SendStatues" xml:space="preserve">
    <value>Send Statues</value>
  </data>
  <data name="SystemMsg_CancelPushMsg_Failure" xml:space="preserve">
    <value>Cancel PushMsg Failure</value>
  </data>
  <data name="SystemMsg_GetPushNotificationList_Failure" xml:space="preserve">
    <value>Get PushNotification List Failure</value>
  </data>
  <data name="Tabel_UserID" xml:space="preserve">
    <value>UserID</value>
  </data>
  <data name="Table_AppFunID" xml:space="preserve">
    <value>App FunID</value>
  </data>
  <data name="Table_Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="Table_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Table_IsOpenPush" xml:space="preserve">
    <value>Is Open Push</value>
  </data>
  <data name="Table_PushDateTime" xml:space="preserve">
    <value>Push DateTime</value>
  </data>
  <data name="Table_Statues" xml:space="preserve">
    <value>Statues</value>
  </data>
  <data name="Table_ExecSys" xml:space="preserve">
    <value>System ID</value>
  </data>
  <data name="Table_Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Table_UpdDT" xml:space="preserve">
    <value>Update DateTime</value>
  </data>
  <data name="JsMsg_PushDateRange_Error" xml:space="preserve">
    <value>Push Date Range Error</value>
  </data>
  <data name="JsMsg_PushDate_Error" xml:space="preserve">
    <value>Push Date Error</value>
  </data>
  <data name="Label_Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Label_PushErrorMessage" xml:space="preserve">
    <value>Push Error Message</value>
  </data>
  <data name="SystemMsg_GetPushNotificationErrorMsg_Failure" xml:space="preserve">
    <value>Get Push Notification Error Message_Failure</value>
  </data>
  <data name="SystemMsg_PushDateRange_Error" xml:space="preserve">
    <value>Push Date Range Error</value>
  </data>
  <data name="SystemMsg_PushDate_Error" xml:space="preserve">
    <value>Push Date Error</value>
  </data>
  <data name="Table_MobileID" xml:space="preserve">
    <value>Mobile ID</value>
  </data>
</root>