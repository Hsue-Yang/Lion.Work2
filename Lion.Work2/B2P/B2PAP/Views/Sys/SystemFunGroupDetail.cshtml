@{ Layout = "~/Views/_Layout.cshtml"; }
@using LionTech.Entity.B2P
@using LionTech.Utility
@using LionTech.Web.ERPHelper
@using Resources
@model B2PAP.Models.Sys.SystemFunGroupDetailModel

<script src="@Common.GetEnumDesc(EnumSystemID.B2PAP)/Scripts/Sys/SystemFunGroupDetail.js" type="text/javascript"></script>

@using (Html.BeginFormSubmit("SystemFunGroupDetailForm"))
{
    using (Html.BeginTabs(B2PAP.Models._BaseAPModel.EnumTabController.Sys.ToString(), Model.TabList))
    {
        bool readOnlyAttribute = false;
        if (Model.ExecAction == EnumActionType.Update || Model.ExecAction == EnumActionType.Delete)
        {
            readOnlyAttribute = true;
        }

        <table class="tblvertical">
            <tr>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_SysID, IsRequired: true)
                </th>
                <td>
                    <span style="display: none">
                        @Html.InputComboBoxFor(model => model.SysID, Model.GetDictionaryFormSelectItem(Model.EntitySysUserSystemSysIDList, false), isDisabled: false, TitleName: SysSystemFunGroupDetail.Label_SysID)
                    </span>
                    <span style="display: block">
                        @Html.InputTextBox("SysIDReadOnlyText", string.Empty, ReadOnly: true, Size: 30)
                    </span>
                </td>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunControllerID, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunControllerID, ReadOnly: readOnlyAttribute, Size: 30, TitleName: SysSystemFunGroupDetail.Label_FunControllerID)
                </td>
                <th>

                </th>
                <td>

                </td>
            </tr>
            <tr>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunGroupZHTW, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunGroupZHTW, false, 30, TitleName: SysSystemFunGroupDetail.Label_FunGroupZHTW)
                </td>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunGroupZHCN, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunGroupZHCN, false, 30, TitleName: SysSystemFunGroupDetail.Label_FunGroupZHCN)
                </td>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunGroupENUS, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunGroupENUS, false, 30, TitleName: SysSystemFunGroupDetail.Label_FunGroupENUS)
                </td>
            </tr>
            <tr>
                <th></th>
                <td></td>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunGroupTHTH, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunGroupTHTH, false, 30, TitleName: SysSystemFunGroupDetail.Label_FunGroupTHTH)
                </td>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_FunGroupJAJP, IsRequired: true)
                </th>
                <td>
                    @Html.InputTextBoxFor(model => model.FunGroupJAJP, false, 30, TitleName: SysSystemFunGroupDetail.Label_FunGroupJAJP)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.FormLabel(SysSystemFunGroupDetail.Label_SortOrder)
                </th>
                <td colspan="5">
                    @Html.InputTextBoxFor(model => model.SortOrder, false, 30, TitleName: SysSystemFunGroupDetail.Label_SortOrder)
                </td>
            </tr>
        </table>

        <div>
            @if (Model.ExecAction == EnumActionType.Add)
            {
                @Html.ButtonClient("AddButton", Resource.Button_Add, className: "btn")
            }
            @if (Model.ExecAction == EnumActionType.Update ||
                 Model.ExecAction == EnumActionType.Delete)
            {
                @Html.ButtonClient("UpdateButton", Resource.Button_Update, className: "btn")
                <span></span>
                @Html.ButtonClient("DeleteButton", Resource.Button_Delete, className: "btn")
            }
            @Html.ButtonClient("CancelButton", Resource.Button_Cancel, className: "btn")
        </div>
    
        using (Html.BeginConfirmDialog("dialog_Confirm", Resource.SysMsg_Title, Resource.SysMsg_DeleteConfirm))
        {
            @Html.ButtonClient("ConfirmOKButton", Resource.Button_Delete)
            @Html.ButtonClient("ConfirmNOButton", Resource.Button_Cancel)
        }
    }
}